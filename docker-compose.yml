services:
  db:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_PROPERTY_USER_PASSWORD=${MYSQL_PROPERTY_USER_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - qrent-data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - qrent-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
  backend:
    build:
      context: .
      dockerfile: packages/backend/Dockerfile
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - API_KEY=${API_KEY}
    ports:
      - "${EXPOSE_PORT:-3200}:${PORT:-3200}"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - /app/packages/backend/node_modules
      - /app/packages/shared/node_modules
      - ./packages/backend:/app/packages/backend
      - ./packages/shared:/app/packages/shared
    networks:
      - qrent-network
  crawler:
    build:
      context: ./packages/backend/scraper
      dockerfile: Dockerfile
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - ./packages/backend/scraper:/app
    networks:
      - qrent-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command: sh -c "chmod +x /app/start_crawler.sh && exec /app/start_crawler.sh"

networks:
  qrent-network:

volumes:
  qrent-data: