name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Setup environment file
      run: |
        cp .env.example .env
        cat << EOF >> .env
        EOF

    - name: Build and start services
      run: |
        export JWT_SECRET='${{ secrets.JWT_SECRET }}'
        export API_KEY='${{ secrets.API_KEY }}'
        export MYSQL_ROOT_PASSWORD='${{ secrets.MYSQL_ROOT_PASSWORD }}'
        export DATABASE_URL='mysql://root:${{ secrets.MYSQL_ROOT_PASSWORD }}@db:3306/qrent'
        
        docker compose build
        docker compose up -d
        timeout 20 bash -c 'while ! docker compose ps | grep -q "healthy"; do sleep 2; done'

    - name: Run tests in container
      run: |
        docker compose exec -T backend pnpm test:backend

    - name: Verify API health
      run: |
        response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3200/echo)
        if [ "$response" != "200" ]; then
          echo "Server health check failed! Got status code: $response"
          exit 1
        else
          echo "Server is up and running with status code 200"
        fi

    - name: Cleanup
      if: always()
      run: docker compose down
