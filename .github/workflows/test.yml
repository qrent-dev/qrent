name: Test

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main, staging]

jobs:
  test:
    environment: staging
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and start services
        run: |
          touch .env
          cat > .env << EOL
          BACKEND_JWT_SECRET_KEY=${{ secrets.BACKEND_JWT_SECRET_KEY }}
          BACKEND_LISTEN_HOST=${{ secrets.BACKEND_LISTEN_HOST}}
          BACKEND_LISTEN_PORT=${{ secrets.BACKEND_LISTEN_PORT }}
          DB_DATABASE_NAME=${{ secrets.DB_DATABASE_NAME }}
          DB_PORT=${{ secrets.DB_PORT }}
          DB_PROPERTY_USER_PASSWORD=${{ secrets.DB_PROPERTY_USER_PASSWORD }}
          DB_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }}
          DEEPSEEK_API_KEY=${{ secrets.DEEPSEEK_API_KEY }}
          DATABASE_URL=mysql://root:${{ secrets.DB_ROOT_PASSWORD }}@db:3306/${{ secrets.DB_DATABASE_NAME }}
          NSW_TRANSPORT_API_KEY=${{ secrets.NSW_TRANSPORT_API_KEY }}
          SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }}
          REDIS_PORT=${{ secrets.REDIS_PORT }}
          REDIS_URL=${{ secrets.REDIS_URL }}
          EOL

          docker compose up -d
          timeout 60 bash -c 'while ! docker compose ps | grep -q "healthy"; do sleep 2; done'

      - name: Run tests in container
        run: |
          docker compose exec -T backend pnpm test:backend

      - name: Cleanup
        if: always()
        run: docker compose down
