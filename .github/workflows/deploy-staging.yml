name: Deploy to Staging Environment

on:
  push:
    branches: [ staging ]
  pull_request:
    branches: [ staging ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: staging
    # needs: []  # 如果要等待 CI 完成，可以添加依赖

    steps:
    - uses: actions/checkout@v4

    - name: Create env file
      run: |
        cp .env.example .env

    - name: Copy files to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.DEPLOY_SERVER_HOST }}
        username: ${{ secrets.DEPLOY_SERVER_USERNAME }}
        password: ${{ secrets.DEPLOY_SERVER_PASSWORD }}
        source: ".,!node_modules"
        target: "~/qrent/"

    - name: Deploy application
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        script: |
          cd ~/qrent/

          cat > .env << EOL
          BACKEND_JWT_SECRET_KEY=${{ secrets.BACKEND_JWT_SECRET_KEY }}
          BACKEND_LISTEN_HOST=${{ secrets.BACKEND_LISTEN_HOST}}
          BACKEND_LISTEN_PORT=${{ secrets.BACKEND_LISTEN_PORT }}
          DB_DATABASE_NAME=${{ secrets.DB_DATABASE_NAME }}
          DB_PORT=${{ secrets.DB_PORT }}
          DB_PROPERTY_USER_PASSWORD=${{ secrets.DB_PROPERTY_USER_PASSWORD }}
          DB_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }}
          DEEPSEEK_API_KEY=${{ secrets.DEEPSEEK_API_KEY }}
          PRISMA_DATABASE_URL=mysql://root:${{ secrets.DB_ROOT_PASSWORD }}@db:3306/${{ secrets.DB_DATABASE_NAME }}
          NSW_TRANSPORT_API_KEY=${{ secrets.NSW_TRANSPORT_API_KEY }}
          EOL

          docker compose down
          docker compose build
          docker compose up -d
          timeout 20 bash -c 'while ! docker compose ps | grep -q "healthy"; do sleep 2; done'
          
          # Check if the server is responding with status code 200
          response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:${{ secrets.BACKEND_LISTEN_PORT }}/echo)
          if [ "$response" != "200" ]; then
            echo "Server health check failed! Got status code: $response"
            exit 1
          else
            echo "Server is up and running with status code 200"
          fi
          